@page "/"
@using Ankh.Redis
@using Ankh.Data
@inject RedisClientManager _clientManager

<div class="w-full shadow stats">
    <div class="stat  @(_dirCount == 0 ? "animate-pulse" : string.Empty)">
        <div class="stat-figure text-primary">
            <div class="avatar">
                <div class="w-16 h-16 p-1 mask mask-squircle">
                    <img src="imgs/hat.png" alt="Ghost icon" class="mask mask-squircle">
                </div>
            </div>
        </div>
        <div class="stat-title">Total Rooms</div>
        <div class="stat-value text-primary">@_dirCount</div>
        <div class="stat-desc">IMVU room's directory</div>
    </div>
    <div class="stat  @(_roomCount == 0 ? "animate-pulse" : string.Empty)">
        <div class="stat-figure text-info">
            <div class="avatar">
                <div class="w-16 h-16 p-1 mask mask-squircle">
                    <img src="imgs/voodoo.png" alt="Ghost icon" class="mask mask-squircle">
                </div>
            </div>
        </div>
        <div class="stat-title">Cached Rooms</div>
        <div class="stat-value text-info">@_roomCount</div>
        <div class="stat-desc"></div>
    </div>
    <div class="stat  @(_userCount == 0 ? "animate-pulse" : string.Empty)">
        <div class="stat-figure text-info">
            <div class="avatar">
                <div class="w-16 h-16 p-1 mask mask-squircle">
                    <img src="imgs/Ghost.png" alt="Ghost icon" class="mask mask-squircle">
                </div>
            </div>
        </div>
        <div class="stat-title">Cached Users</div>
        <div class="stat-value text-info">@_userCount</div>
        <div class="stat-desc text-info"></div>
    </div>
</div>

@code {
    private int _dirCount;
    private int _userCount;
    private int _roomCount;

    protected override Task OnInitializedAsync() {
        return Task.Run(async () => {
            _userCount = await _clientManager.For<UserData>().CountAsync();
            _roomCount = await _clientManager.For<RoomData>().CountAsync();
            _dirCount = await _clientManager.For<DirectoryData>().CountAsync();
        });
    }

}